/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphs;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.util.ArrayList;

/**
 *
 * @author Hung
 */
public class pLines extends javax.swing.JPanel {
    ArrayList<Line> lines = new ArrayList<>(); //array list of lines for redraw
    Point p1 = null, p2 = null; //toa do p1,p2
    Color color; //color of line

    public pLines(Color colour) {
        initComponents();
        this.color = colour;
    }

    public void ChangeColour(Color colour) {
        this.color = colour;
    }

    public void Undo() {
        if (lines.size() > 0) {
            lines.remove(lines.size() - 1);
            repaint();
            p1 = p2 = null;
        }
    }

    @Override
    protected void paintComponent(Graphics grphcs) {
        super.paintComponent(grphcs);
        
        if (lines.size()>=1) {
            for (int i = 0; i < lines.size(); i++) { //redraw all
                grphcs.setColor(lines.get(i).getColor());
                Point p3 = lines.get(i).getP1(); //get starting point
                Point p4 = lines.get(i).getP2(); //get ending point
                grphcs.drawLine(p3.x, p3.y, p4.x, p4.y); //redraw each line
            }
        }
        
        if (p1 != null && p2 != null) { //first time draw or draw first line or draw line before drawing second line
            grphcs.setColor(color);
            grphcs.drawLine(p1.x, p1.y, p2.x, p2.y);
        }
        if (lines.size() >= 1) {
            for (int i = 0; i < lines.size(); i++) {
                grphcs.setColor(lines.get(i).getColor());
                Point p3 = lines.get(i).getP1();
                Point p4 = lines.get(i).getP2();
                grphcs.drawLine(p3.x, p3.y, p4.x, p4.y);
            }
        }

        if (p1 != null && p2 != null) {
            grphcs.setColor(color);
            grphcs.drawLine(p1.x, p1.y, p2.x, p2.y);
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        p1 = evt.getPoint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        p2 = evt.getPoint();
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        p2 = evt.getPoint();
        lines.add(new Line(p1.x, p1.y, p2.x, p2.y, color));
    }//GEN-LAST:event_formMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
