/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphs;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.util.ArrayList;

/**
 *
 * @author Hung
 */
public class pRectangle extends javax.swing.JPanel {

    Point p1 = null, p2 = null;
    int left, top, width, height;
    Color colour;
    Color bufferColour;
    boolean isFilled, isFilledBuffer;
    ArrayList<Rectangle> rectangles = new ArrayList<>();

    public pRectangle(boolean isFilled, Color colour) {
        initComponents();
        this.colour = colour;
        this.isFilled = isFilled;
    }

    public void Fill(boolean isFilled) {
        this.isFilled = isFilled;
    }

    public void ChangeColour(Color colour) {
        this.colour = colour;
    }


    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        if (rectangles.size() >= 1) {
            for (int i = 0; i < rectangles.size(); i++) {
                g.setColor(rectangles.get(i).getColour());
                Point p3 = rectangles.get(i).getP1();
                Point p4 = rectangles.get(i).getP2();
                int left2 = p3.x < p4.x ? p3.x : p4.x;
                int top2 = p3.y < p4.y ? p3.y : p4.y;
                int width2 = p3.x - p4.x;
                if (width2 < 0) {
                    width2 = -width2;
                }
                int height2 = p3.y - p4.y;
                if (height2 < 0) {
                    height2 = -height2;
                }

                if (rectangles.get(i).isFilled) {
                    g.fillRect(left2, top2, width2, height2);
                } else {
                    g.drawRect(left2, top2, width2, height2);
                }
            }
        }

        if (p1 != null) {
            g.setColor(colour);
            if (isFilledBuffer) {
                g.fillRect(left, top, width, height);
            } else {
                g.drawRect(left, top, width, height);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        p1 = evt.getPoint();
//        bufferColour = colour;
        isFilledBuffer = isFilled;
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        p2 = evt.getPoint();
        rectangles.add(new Rectangle(p1.x, p1.y, p2.x, p2.y, colour, isFilled));
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        p2 = evt.getPoint();

        left = p1.x < p2.x ? p1.x : p2.x;
        top = p1.y < p2.y ? p1.y : p2.y;
        width = p1.x - p2.x;
        if (width < 0) {
            width = -width;
        }

        height = p1.y - p2.y;
        if (height < 0) {
            height = -height;
        }
        repaint();
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
